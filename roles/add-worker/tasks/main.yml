---

- name: Get k8s cluster nodes
  ansible.builtin.shell: kubectl get nodes|egrep -v NAME|awk '{print $1}'
  environment:
    KUBECONFIG: "{{LOCAL_KUBECONFIG}}"
  register: _nodes
  delegate_to: localhost
  run_once: true

- name: End host when already in cluster
  ansible.builtin.meta: end_host
  when:
    - inventory_hostname in groups.worker
    - inventory_hostname in _nodes.stdout_lines

- name: set fact add_new_node=true
  ansible.builtin.set_fact:
    add_new_node: true
  with_items: "{{groups.worker}}"
  when: item in ansible_play_hosts
    
- name: Generate node join token
  ansible.builtin.command: kubeadm token create --print-join-command
  register: _join_token
  environment:
    KUBECONFIG: "{{KUBECONFIG}}"
  run_once: true
  when: 
    - node_join_token == ""
    - add_new_node|bool
    - inventory_hostname in groups.master

- name: Show generated token
  ansible.builtin.debug:
    var: _join_token.stdout
  run_once: true
  when: _join_token is defined and _join_token is changed

- name: Show message when no new node to join
  ansible.builtin.debug:
    msg: "No new worker node available to add in k8s cluster"
  when: _join_token is not changed

- name: Run node join command on worker node using existing token
  ansible.builtin.command: "{{node_join_token}}"
  register: _node_join
  when:
    - inventory_hostname in groups.worker
    - node_join_token != ""

- name: Run node join command on worker node using new token
  ansible.builtin.command: "{{_join_token.stdout}}"
  register: _node_join
  when:
    - inventory_hostname in groups.worker
    - node_join_token == ""
    - _join_token is defined

- name: Wait for 10 mins for node to become ready
  ansible.builtin.pause:
    minutes: 10
    echo: yes
  when: _node_join is defined and _node_join is changed

- name: Set node label
  local_action: ansible.builtin.command kubectl label node {{inventory_hostname}} node-role.kubernetes.io/worker=worker
  environment:
    KUBECONFIG: "{{LOCAL_KUBECONFIG}}"
  with_items: "{{ansible_play_hosts}}"
  when: item in groups.worker

- name: Get k8s cluster nodes
  local_action: ansible.builtin.shell kubectl get nodes
  environment:
    KUBECONFIG: "{{LOCAL_KUBECONFIG}}"
  register: _nodes

- name: Show nodes
  ansible.builtin.debug:
    var: _nodes.stdout_lines
  run_once: true