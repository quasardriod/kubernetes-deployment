---

- name: Check if /etc/kubernetes/admin.conf already exists
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: _kconfig

- block:
  - name: Check state of the cluster
    ansible.builtin.shell: kubectl cluster-info
    environment:
      KUBECONFIG: "{{KUBECONFIG}}"
    register: _kstatus

  - name: show k8s cluter-info
    ansible.builtin.debug:
      var: _kstatus.stdout_lines

  - name: Review cluster status
    ansible.builtin.pause:
      echo: yes
      minutes: 15
      prompt: "\n
        Review cluster status in above output. \n
        If it's looking healthy Continue, else Abort and troubleshoot problem"
    when: _kstatus.rc == 0
  when: _kconfig.stat.exists
  
- block:
  - name: Initialize k8s master
    ansible.builtin.command: kubeadm init
    run_once: true
    register: _kinit

  - name: Show kubeadm init output
    ansible.builtin.debug:
      var: _kinit.stdout_lines
    run_once: true
  when: not _kconfig.stat.exists

- name: Set Permission on /etc/kubernetes/admin.conf
  ansible.builtin.file:
    path: /etc/kubernetes/admin.conf
    mode: 0644

- name: Create .kube in {{ansible_user}} home
  ansible.builtin.file:
    path: "/home/{{ansible_user}}/.kube"
    state: directory
  become: false

- name: Copy /etc/kubernetes/admin.conf in .kube
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ansible_user}}/.kube/config"
    mode: 0644
    remote_src: true
  become: false

- name: Do lookup for non-running pods
  ansible.builtin.include_role:
    name: health-check
    tasks_from: pods-health.yml