# Create Same app using CLI
# kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.39 -- /agnhost netexec --http-port=8080
# kubectl expose deployment hello-node --type=LoadBalancer --port=8080
apiVersion: v1
kind: Namespace
metadata:
  name: hello-ns

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-node
  labels:
    app: hello
  namespace: hello-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
      - name: hello-node
        image: registry.k8s.io/e2e-test-images/agnhost:2.39
        ports:
        - containerPort: 8081
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: hello-node-np
  namespace: hello-ns
spec:
  type: NodePort
  selector:
    app: hello
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-node
#   namespace: nginx-ns
# spec:
#   selector:
#     app.kubernetes.io/name: hello
#   ports:
#   - protocol: TCP
#     port: 8081
#     targetPort: 8080

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hello-ingr
#   namespace: nginx-ns
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: "demo.quasarstack.com"
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: hello-node-np
#             port:
#               number: 8080
